<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Ruby on Rails | Tom Pesman]]></title>
  <link href="http://tnux.net/blog/categories/ruby-on-rails/atom.xml" rel="self"/>
  <link href="http://tnux.net/"/>
  <updated>2013-06-13T10:43:29+02:00</updated>
  <id>http://tnux.net/</id>
  <author>
    <name><![CDATA[Tom Pesman]]></name>
    <email><![CDATA[tom@tnux.net]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Gradient calculation in Ruby]]></title>
    <link href="http://tnux.net/blog/2011/10/26/gradient-calculation-in-ruby/"/>
    <updated>2011-10-26T07:24:00+02:00</updated>
    <id>http://tnux.net/blog/2011/10/26/gradient-calculation-in-ruby</id>
    <content type="html"><![CDATA[<p>For one of my projects I needed to calculate color values between two colors. This is what I came up with:</p>

<p>``` ruby
class Gradient
  attr_accessor :resolution, :R0, :G0, :B0, :R1, :G1, :B1</p>

<p>  def initialize(start, stop, resolution)</p>

<pre><code>@resolution = Float(resolution)

@R0 = (start &amp; 0xff0000) &gt;&gt; 16;
@G0 = (start &amp; 0x00ff00) &gt;&gt; 8;
@B0 = (start &amp; 0x0000ff) &gt;&gt; 0;

@R1 = (stop &amp; 0xff0000) &gt;&gt; 16;
@G1 = (stop &amp; 0x00ff00) &gt;&gt; 8;
@B1 = (stop &amp; 0x0000ff) &gt;&gt; 0;
</code></pre>

<p>  end</p>

<p>  def gradient(step)</p>

<pre><code>r = interpolate(@R0, @R1, step);
g = interpolate(@G0, @G1, step);
b = interpolate(@B0, @B1, step);

(((r &lt;&lt; 8) | g) &lt;&lt; 8) | b;
</code></pre>

<p>  end</p>

<p>  def interpolate(start, stop, step)</p>

<pre><code>if (start &lt; stop)
  return (((stop - start) * (step / @resolution)) + start).round;
else
  return (((start - stop) * (1 - (step / @resolution))) + stop).round;
end
</code></pre>

<p>  end
end
```</p>

<p>You can use it like this:</p>

<p><code>ruby
g = Gradient.new(0xe6ebf9, 0x33abe3, 100)
g.gradient(50)
</code></p>

<p>And with the optional <code>to_s(16)</code> it will return a hex value, which can be used in the CSS code.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[New website released!]]></title>
    <link href="http://tnux.net/blog/2011/08/02/new-website-released/"/>
    <updated>2011-08-02T08:17:00+02:00</updated>
    <id>http://tnux.net/blog/2011/08/02/new-website-released</id>
    <content type="html"><![CDATA[<p>Earlier this week I've released my new website! My previous website was a standard WordPress blog, but I wanted more control of the blog and other pages so I've created my own site in Ruby on Rails. One of the extra functionalities I've added is a download section at the Revit pages, so everyone can try the add-ins before buying. I'm also planning to add more features in the future; like a store for add-ins, a search field and social network sharing buttons.</p>

<p>This site is built on the latest release candidate of Ruby on Rails 3.1. It uses the new asset pipeline with SASS and Coffeescript. I've used test driven development as the development process, which is very suitable for a Rails project. First tests are made and subsequently the code is added to the project to make the tests pass. My code is monitored with guard and has a 100% test coverage.</p>

<p>This site provides new opportunities for both my Ruby on Rails and my Revit projects. Please check out the rest of my site and if you are a Revit user, make sure you download some of my add-ins. I will be adding more of them in the upcoming days.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Amazon S3 Query String Authentication and Ruby on Rails]]></title>
    <link href="http://tnux.net/blog/2010/11/09/amazon-s3-query-string-authentication-and-ruby-on-rails/"/>
    <updated>2010-11-09T10:38:00+01:00</updated>
    <id>http://tnux.net/blog/2010/11/09/amazon-s3-query-string-authentication-and-ruby-on-rails</id>
    <content type="html"><![CDATA[<p>Amazons S3 added this summer a new way to allow people to access your files stored on S3. This method is called Query String Authentication and by generating an url for a private file you can offer access to that file for a limited amount of time. First upload a file to Amazon S3 and use the acl 'private' to store the file. To generate the url for to such a link I've made a helper for Ruby on Rails:</p>

<p>``` ruby
def generateTemporaryURL(resource)
  filename = "#{RAILS_ROOT}/config/amazon_s3.yml"
  config = YAML.load_file(filename)
  bucket = config[ENV['RAILS_ENV']]['bucket_name']
  access_key_id = config[ENV['RAILS_ENV']]['access_key_id']
  secret_access_key = config[ENV['RAILS_ENV']]['secret_access_key']
  expires = 10.days.from_now.to_i # 10 days from now in epoch time in UTC</p>

<p>  stringtosign = "GET\n\n\n#{expires}\n/#{bucket}/"+ENV['RAILS_ENV']+"/#{resource.gsub(" ", "+")}";</p>

<p>  signature = Base64.encode64(</p>

<pre><code>            OpenSSL::HMAC.digest(
              OpenSSL::Digest::Digest.new('sha1'),
              secret_access_key, stringtosign.toutf8))
</code></pre>

<p>  # cleanup the signature for the url
  signature = signature.gsub("\n","").gsub("+","%2B")</p>

<p>  return "http://#{bucket}/"+ENV['RAILS_ENV']+"/#{resource.gsub(" ", "+")}?AWSAccessKeyId=#{access_key_id}&amp;Expires=#{expires}&amp;Signature=#{signature}"
end
```</p>

<p>This method generates an url which is valid for 10 days. I'm now 100% sure of the gsub method to convert spaces in a resource filename to a plus sign, maybe there are more characters you should be aware of. Anyway this method is based on the SWF Upload <a href="http://tnux.net/2010/01/17/swfupload-direct-to-amazon-s3-in-ruby-on-rails/">post</a>.</p>

<p><strong>Update:</strong> Thanks to Simon, I've updated the example where it would produce an invalid signature. The plus sign in the url needs to be url encoded.</p>

<p><strong>Update 2:</strong> Rob provided a Ruby 1.9 only <a href="https://gist.github.com/1032395">version</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Passenger and REE on Ubuntu 10.04]]></title>
    <link href="http://tnux.net/blog/2010/11/02/passenger-and-ree-on-ubuntu-10-04/"/>
    <updated>2010-11-02T10:35:00+01:00</updated>
    <id>http://tnux.net/blog/2010/11/02/passenger-and-ree-on-ubuntu-10-04</id>
    <content type="html"><![CDATA[<p><strong>UPDATE:</strong> that didn't work well, now I'm using the passenger 3 from the gem which comes with REE. No installation of passenger from brightbox, only the REE, and then run the passenger-install-apache2-module. Done ;-)</p>

<p>A small post on how to install Passenger and Ruby Enterprise Edition on Ubuntu 10.04.</p>

<p>add:</p>

<p><code>bash
deb http://apt.brightbox.net lucid main
</code></p>

<p>to <code>/etc/apt/sources.list.d/passenger</code></p>

<p>Get the public key to satisfy apt-get:</p>

<p><code>bash
wget http://apt.brightbox.net/release.asc
</code></p>

<p>Install the key:</p>

<p><code>bash
sudo apt-key add release.asc
</code></p>

<p>Get the latest version of REE from http://www.rubyenterpriseedition.com/download.html</p>

<p><code>bash
wget http://rubyforge.org/frs/download.php/71100/ruby-enterprise_1.8.7-2010.02_i386_ubuntu10.04.deb
</code></p>

<p>Install this package:</p>

<p><code>bash
sudo dpkg -i ruby-enterprise_1.8.7-2010.02_i386_ubuntu10.04.deb
</code></p>

<p>Install passenger:</p>

<p><code>bash
sudo apt-get install libapache2-mod-passenger
</code></p>

<p>Restart apache:</p>

<p><code>bash
sudo service apache2 restart
</code></p>

<p>Done!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MiniGeocode 0.0.1 released]]></title>
    <link href="http://tnux.net/blog/2010/09/18/minigeocode-0-0-1-released/"/>
    <updated>2010-09-18T10:34:00+02:00</updated>
    <id>http://tnux.net/blog/2010/09/18/minigeocode-0-0-1-released</id>
    <content type="html"><![CDATA[<p>Today I released my first Ruby on Rails plugin. This plugin does some basic geolocation lookups. It can be installed by issuing the <code>gem install mini_geocode</code> command. To add it to Rails 3 add <code>gem 'mini_geocode'</code> to your Gemfile in the root of your rails project. To use it in a Rails 2.x installation, add <code>config.gem 'mini_geocode'</code> to you environment.rb. This plugin has no dependencies so the installation should be very easy.</p>
]]></content>
  </entry>
  
</feed>
